/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pcd.gui.base.FileChooserAccesory;

import java.io.File;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Nao
 */
public class FileSearchAccessory extends javax.swing.JPanel implements Runnable{
    private JFileChooser chooser;
    private FileFilter filter;
    private String text ;
    private File dir;
    private long foundFilesCount;
    private long CheckedCount;
    private int depth;
    private int option;
    private DefaultListModel<File> model;
    private boolean stop = false;
    private Search search;
    private Thread currentThread;
    /**
     * Creates new form FileSearchAccessory
     */
    
    public FileSearchAccessory(JFileChooser ch) {
        model = new DefaultListModel <File>();
        this.chooser = ch;
        filter = chooser.getFileFilter();
        dir = chooser.getCurrentDirectory();
        search = new Search(this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchButton = new javax.swing.JButton();
        NameSearchField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        FileList = new javax.swing.JList<>();
        SearchChoice = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        SearchButton1 = new javax.swing.JButton();
        DirectoryChoice = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        Counter = new javax.swing.JTextField();

        SearchButton.setText("Search");
        SearchButton.setToolTipText("");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        FileList.setModel(model);
        FileList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        FileList.setToolTipText("");
        FileList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FileListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(FileList);

        SearchChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Contains", "Is", "Starts with", "Ends with", "Regex" }));
        SearchChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchChoiceActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setText("Name");
        jTextField2.setAutoscrolls(false);
        jTextField2.setBorder(null);
        jTextField2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField2.setEnabled(false);
        jTextField2.setFocusable(false);
        jTextField2.setOpaque(false);
        jTextField2.setRequestFocusEnabled(false);
        jTextField2.setVerifyInputWhenFocusTarget(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        SearchButton1.setText("Stop");
        SearchButton1.setToolTipText("");
        SearchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButton1ActionPerformed(evt);
            }
        });

        DirectoryChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "This and sub directories", "This directory" }));
        DirectoryChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectoryChoiceActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setText("Search in");
        jTextField3.setBorder(null);
        jTextField3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField3.setFocusable(false);
        jTextField3.setRequestFocusEnabled(false);
        jTextField3.setVerifyInputWhenFocusTarget(false);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        Counter.setEditable(false);
        Counter.setText("found:");
        Counter.setAutoscrolls(false);
        Counter.setBorder(null);
        Counter.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Counter.setEnabled(false);
        Counter.setFocusable(false);
        Counter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CounterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(SearchChoice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DirectoryChoice, 0, 187, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NameSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Counter, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(SearchButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SearchButton))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DirectoryChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SearchChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchButton1)
                    .addComponent(Counter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        stop = false;
   
        dir = chooser.getCurrentDirectory();
        option = SearchChoice.getSelectedIndex();
        text = NameSearchField.getText();
        depth = DirectoryChoice.getSelectedIndex();
        
        model.clear();
        this.foundFilesCount=0;
        this.CheckedCount=0;
        
        if(currentThread!=null){
            currentThread.interrupt();
            currentThread= null;
        }
        currentThread = new Thread(search);
        switch (option) {
            case 0:
                
                text = ".*(?i)"+text+".*";
                currentThread.start();
                break;
            case 1:
                text ="(?i)"+text;
                currentThread.start();
                break;
            case 2:
                 text ="^(?i)"+text+".*";
               currentThread.start();
                break;
            case 3:
                text =".*(?i)"+text+"$";
              currentThread.start();
                break;
            case 4:
               currentThread.start();
                break;
            default:
                break;
        }
       
  
      
       
        
    }//GEN-LAST:event_SearchButtonActionPerformed
    
     
     
     
    
    
    
    
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void SearchChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchChoiceActionPerformed

    private void SearchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButton1ActionPerformed
    stop= true;
    }//GEN-LAST:event_SearchButton1ActionPerformed

    private void DirectoryChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectoryChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectoryChoiceActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void CounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CounterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CounterActionPerformed

    private void FileListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileListMouseClicked
if (SwingUtilities.isLeftMouseButton(evt)) {
    int row =FileList.locationToIndex(evt.getPoint());
    chooser.setSelectedFile(model.elementAt(row));
    
        
            
        }
    }//GEN-LAST:event_FileListMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Counter;
    private javax.swing.JComboBox<String> DirectoryChoice;
    private javax.swing.JList<File> FileList;
    private javax.swing.JTextField NameSearchField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton SearchButton1;
    private javax.swing.JComboBox<String> SearchChoice;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public javax.swing.JTextField getCounter() {
        return Counter;
    }

    public void setCounter(javax.swing.JTextField Counter) {
        this.Counter = Counter;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public int getOption() {
        return option;
    }

    public void setOption(int option) {
        this.option = option;
    }

    public DefaultListModel<File> getModel() {
        return model;
    }

    public void setModel(DefaultListModel<File> model) {
        this.model = model;
    }

    public boolean isStop() {
        return stop;
    }

    public void setStop(boolean stop) {
        this.stop = stop;
    }

    public Search getSearch() {
        return search;
    }

    public void setSearch(Search search) {
        this.search = search;
    }

    public JFileChooser getChooser() {
        return chooser;
    }

    public void setChooser(JFileChooser chooser) {
        this.chooser = chooser;
    }

    public FileFilter getFilter() {
        return filter;
    }

    public void setFilter(FileFilter filter) {
        this.filter = filter;
    }

    public File getDir() {
        return dir;
    }

    public void setDir(File dir) {
        this.dir = dir;
    }

    public long getFoundFilesCount() {
        return foundFilesCount;
    }

    public void setFoundFilesCount(long foundFilesCount) {
        this.foundFilesCount = foundFilesCount;
    }

    public long getCheckedCount() {
        return CheckedCount;
    }

    public void setCheckedCount(long CheckedCount) {
        this.CheckedCount = CheckedCount;
    }

    public int getDepth() {
        return depth;
    }

    public void setDepth(int depth) {
        this.depth = depth;
    }

  
}
